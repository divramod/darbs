# --- SETTINGS
# set -g prefix C-a
# unbind C-b
# bind C-a send-prefix
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log" # Log output to a text file on demand.
set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 0
setw -g monitor-activity on
set -g visual-activity on
set-option -g history-limit 90000

# --- MOUSE SUPPORT
# https://til.hashrocket.com/posts/f4e777f1f5-fix-tmux-21-mode-mouse-error
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;

# --- COPY MODE
# https://gist.github.com/MohamedAlaa/2961058
# https://coderwall.com/p/4b0d0a/how-to-copy-and-paste-with-tmux-on-ubuntu
# all vi keys: https://superuser.com/questions/395158/tmux-copy-mode-select-text-block/593712
# :list-keys -t vi-copy
bind -n M-i run "tmux set window-style 'bg=colour231,fg=colour232' && tmux copy-mode"
bind -n M-y run "tmux set window-style 'bg=colour231,fg=colour232'"
setw -g mode-keys vi
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'q' run "tmux set window-style 'bg=default' && tmux send-keys -X cancel"
# https://superuser.com/questions/360832/how-can-i-make-ctrlleft-right-keys-to-move-by-whole-word-in-tmux
set-window-option -g xterm-keys on
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"
# bind-key -t vi-copy o copy-selection
# bind-key -t vi-copy o copy-pipe "xclip -sel clip -i"
# bind-key -t vi-copy o copy-pipe "xargs -I{} tmux send-keys -t 1 ';call OpenTestFile(\"{}\")' Enter && tmux select-pane -t 1"

# --- PANES
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "run 'vim_tmux_i3 left'"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "run 'vim_tmux_i3 down'"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "run 'vim_tmux_i3 up'"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "run 'vim_tmux_i3 right'"
bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h run 'vim_tmux_i3 left'
bind-key -T copy-mode-vi M-j run 'vim_tmux_i3 down'
bind-key -T copy-mode-vi M-k run 'vim_tmux_i3 up'
bind-key -T copy-mode-vi M-l run 'vim_tmux_i3 right'
bind-key -T copy-mode-vi M-\ select-pane -l

# --- BINDINGS
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-t kill-pane # TODO kill tmux
bind -n M-q kill-session
bind -n M-o run-shell "tmux_pane_kill_all_execpt_current"
bind -n M-r kill-pane
bind -n M-tab last-window
bind -n M-v run-shell "tmux_window_choose"
bind -n M-n select-window -t :-
bind -n M-m select-window -t :+
bind -n M-b resize-pane -Z # zoom
# http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind -n M-- split-window -c "#{pane_current_path}"
bind -n M-, split-window -hb -c "#{pane_current_path}"
bind -n M-. new-window -c "#{pane_current_path}"
bind -n M-J resize-pane -D 1
bind -n M-L resize-pane -L 1
bind -n M-K resize-pane -U 1
bind -n M-H resize-pane -R 1
bind -n M-s source-file ~/.tmux.conf; display "Reloaded!"
# https://superuser.com/questions/470130/tmux-prompt-to-select-window-for-join-pane-while-still-seeing-window-numbers-an
bind -n M-Space split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
bind -n M-F1 run-shell "tmuxp load -y calpobot"
bind -n M-F2 run-shell "tmuxp load -y devops"
bind -n M-F3 run-shell "tmuxp load -y calpy"
bind -n M-F4 run-shell "tmuxp load -y calponia"
bind -n M-F5 run-shell "tmuxp load -y cpla"
bind -n M-F9 run-shell "tmux_yank_pane_to_vim"
# set -g window-status-current-format       '[#S:#I] #(basename $(dirname #W))/#(basename #W)'
# bind -n M-F6 set -g window-status-format '#[fg=black,bg=white][#I]#[fg=colour14,bg=black] #(cd #{pane_current_path}; basename $PWD)#[fg=white,bg=black]/#[fg=colour226]#(basename $(dirname #W))/#(basename #W)' \; set -g window-status-current-format '#[fg=black,bg=colour231,bold][#I]#[fg=colour22,bold] #(cd #{pane_current_path}; basename $PWD)#[fg=white,bold]/#[fg=colour9]#(basename $(dirname #W))/#(basename #W)'

# --- FORMATTING
bind -n M-F6 set -g window-status-format '#[fg=colour231,bg=black]#I #[fg=colour226,bg=black]#(tmux_window_construct_title #W)' \; set -g window-status-current-format '#[fg=colour196,bg=black][#I] #[fg=colour196,bold]#(tmux_window_construct_title #W)' \; set -g status-left-length 1 \; set -g status-right-length 1 \; set -g status-right '' \; set -g status-right ''
bind -n M-F7 set -g window-status-format '#[fg=colour231,bg=black]#I #[fg=colour226,bg=black]#(cd #{pane_current_path}; basename $PWD)#[fg=white,bg=black] #(cd #{pane_current_path}; git_branch_get_name)' \; set -g window-status-current-format       '#[fg=colour196,bg=black,bold][#I] #[fg=colour196,bg=black]#(cd #{pane_current_path}; basename $PWD)#[fg=colour13,bg=black] #(cd #{pane_current_path}; git_branch_get_name)'
set -g window-status-format               '#[fg=colour231,bg=black]#I #[fg=colour226,bg=black]#(cd #{pane_current_path}; basename $PWD)#[fg=white,bg=black] #(cd #{pane_current_path}; git_branch_get_name)'
set -g window-status-current-format       '#[fg=colour196,bg=black,bold][#I] #[fg=colour196,bg=black]#(cd #{pane_current_path}; basename $PWD)#[fg=colour13,bg=black] #(cd #{pane_current_path}; git_branch_get_name)'
set -g pane-border-style                  fg=colour238
set -g pane-border-style                  fg=green
set -g pane-border-style                  bg=black
set -g pane-active-border-style           fg=white
set -g pane-active-border-style           bg=colour33
set -g pane-active-border-style           fg=colour236
set -g pane-active-border-style           bg=colour3
set -g message-style                      fg=white
set -g message-style                      bg=black
set -g message-style                      bright
set -g message-style                      bold
set -g display-time                       1000
setw -g mode-style                        bg=black
set-option -g default-terminal            "screen-256color"       # or "xterm-256color" or "screen-256color"
set-option -g pane-active-border-style    fg=green
set -g focus-events                       on
set -g pane-border-style                  fg=colour245
set -g status-bg                          colour234
set -g status-fg                          white
set -g status-justify                     "centre"
set -g status-left                        ' #[fg=white,bg=colour124,bold][#S]#[fg=white,bg=black] #[fg=white,bg=colour124,bold][#{pane_current_command}]'
set -g status-left-length                 100
set -g status-right                       '#[fg=white,bg=colour124,bold][#(cd #{pane_current_path}; git --no-pager log -1 --pretty=\%\s | cut -c 1-60) ..]'
set -g status-right-length                100
set -g terminal-overrides                 'xterm*:smcup@:rmcup@'
set -g window-status-activity-style       bold
# set -g window-status-format               '#[fg=colour226,bg=black]#I:#(cd #{pane_current_path}; basename $PWD)#[fg=white,bg=black] #(basename $(dirname #W))/#[fg=colour219,bg=black]#(basename #W)'
# set -g window-status-current-format       '#[fg=black,bg=colour231,bold]#I:#(cd #{pane_current_path}; basename $PWD)#[fg=colour22,bold] #(basename $(dirname #W))/#(basename #W) '
# set -g window-status-format               '#[fg=black,bg=white][#I:#(cd #{pane_current_path}; basename $PWD)]#[fg=colour226] #(basename $(dirname #W))/#(basename #W)'
# set -g window-status-current-format       '#[fg=black,bg=colour231,bold][#I:#(cd #{pane_current_path}; basename $PWD)]#[fg=colour9]#(basename $(dirname #W))/#(basename #W)'
# set -g window-status-format               '#[fg=black,bg=white][#S:#I]#[fg=colour14,bg=black] #(cd #{pane_current_path}; basename ${W})#[fg=white,bg=black]:#[fg=colour226]#W))'
# set -g window-status-current-format       '[#S:#I] #(basename $(dirname #W))/#(basename #W)'
# set -g window-status-format               '#[fg=black,bg=white][#I]#[fg=colour14,bg=black] #(cd #{pane_current_path}; basename $PWD)#[fg=white,bg=black]:#[fg=colour226]#(basename /#((cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD))) #(basename #W)'
# set -g window-status-format               '[#S:#I] #(pathname #W)/#(basename #W)'
# set -g window-status-current-format       '#[fg=black,bg=colour231,bold][#I]#[fg=colour22,bold] #(cd #{pane_current_path}; basename $PWD)#[fg=white,bold]:#[fg=colour9]#(basename /#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)) #(basename #W)'

set-option -g set-titles on
# set-option -g set-titles-string "#S / #W"
set-option -g set-titles-string "hello"
# set -g window-status-current-format       '#[fg=white,bg=colour124,bold][#I]#(cd #{pane_current_path}; basename $PWD):#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)'

# --- source plugins
# TMUX_GITBAR_DIR="$HOME/.darbs/scripts/common/tmux/plugins/tmux-gitbar"
# source-file "$HOME/.darbs/scripts/common/tmux/plugins/tmux-gitbar/tmux-gitbar.tmux"

# --- other conf files
# https://github.com/Starefossen/dotfiles/blob/master/.tmux.conf
# https://github.com/sbdchd/.dotfiles/blob/master/.tmux.conf

# --- create or attah to session
# https://unix.stackexchange.com/questions/103898/how-to-start-tmux-with-attach-if-a-session-exists
new-session -n $HOST

setw -g automatic-rename
# set -g automatic-rename off
# set allow-rename off
# set -g pane-border-status top
# set -g pane-border-format "#P: #{pane_current_command}"
